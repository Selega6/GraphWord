name: CD - Deploy to LocalStack

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: windows-latest

    services:
      docker:
        image: docker:20.10.7
        options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Dependencies (Terraform, AWS CLI)
        run: |
          choco install terraform unzip -y
          pip install localstack-client awscli

      - name: Verify Terraform Installation
        run: |
          terraform -version

      - name: Run LocalStack in Docker
        run: |
          docker run -d --name localstack-container ^
            -p 4566:4566 -p 4510-4559:4510-4559 ^
            -v //var/run/docker.sock:/var/run/docker.sock ^
            localstack/localstack
          timeout /t 30

      - name: Initialize Terraform
        run: |
          $env:AWS_ACCESS_KEY_ID="test"
          $env:AWS_SECRET_ACCESS_KEY="test"
          $env:AWS_DEFAULT_REGION="us-east-1"
          terraform init

      - name: Terraform Apply
        run: |
          $env:AWS_ACCESS_KEY_ID="test"
          $env:AWS_SECRET_ACCESS_KEY="test"
          $env:AWS_DEFAULT_REGION="us-east-1"
          terraform apply -var-file="envs/prod.tfvars" -auto-approve

      - name: Verify S3 Bucket in LocalStack
        run: |
          awslocal s3 ls || echo "Failed to list S3 buckets."

      - name: Terraform Destroy
        if: always()
        run: |
          $env:AWS_ACCESS_KEY_ID="test"
          $env:AWS_SECRET_ACCESS_KEY="test"
          $env:AWS_DEFAULT_REGION="us-east-1"
          terraform destroy -var-file="envs/prod.tfvars" -auto-approve

      - name: Stop LocalStack
        if: always()
        run: |
          if (docker ps -a --format "{{.Names}}" | Select-String -Pattern "localstack-container") {
            docker stop localstack-container
            docker rm localstack-container
          } else {
            Write-Output "LocalStack container does not exist."
          }
